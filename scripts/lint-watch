#!/usr/bin/env node_modules/.bin/babel-node --stage=0

import gaze from 'gaze';
import {green, yellow} from 'colors';
import path from 'path';
import {spawn} from 'child_process';

const APP_ROOT = path.join(__dirname, '..');
const JS_EXT = path.join('**', '*.js');

const dirs = [
  path.join(APP_ROOT, 'src', JS_EXT),
  path.join(APP_ROOT, 'test', JS_EXT),
  path.join(APP_ROOT, 'data', JS_EXT),
  path.join(APP_ROOT, 'webpack', JS_EXT),
];

const lint = () => {
  process.stdout.write(yellow('Linting...') + '\n');
  const linter = spawn('./scripts/lint', [], {stdio: 'inherit'});

  if (linter.stdout) {
    linter.stdout.on('data', (data) => {
      process.stdout.write(data + '\n');
    });
  }

  if (linter.stderr) {
    linter.stderr.on('data', (data) => {
      process.stderr.write(data + '\n');
    });
  }

  linter.on('exit', (code) => {
    if (code === 0) {
      process.stdout.write(green('âœ“ 0 problems (0 errors, 0 warnings)\n\n'));
    }
  });
}

gaze(dirs, function(filepath) {
  this.on('all', (event, filepath) => lint());
  lint();
});
